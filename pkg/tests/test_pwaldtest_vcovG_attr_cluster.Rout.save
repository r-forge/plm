
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #### Testfile to see the attr(vcov, which="cluster") for various vcovXX methods
> #
> # see also testfile tests/test_pwaldtest.R for general tests of the F test and Chisq test
> 
> options(scipen = 999)
> options(digits = 8)
> library(plm)
> data("Grunfeld", package="plm")
> gp <- plm(inv ~ value + capital, data = Grunfeld, model = "pooling")
> gi <- plm(inv ~ value + capital, data = Grunfeld,
+           effect = "individual", model = "within")
> gt <- plm(inv ~ value + capital, data = Grunfeld,
+           effect = "time", model = "within")
> gd <- plm(inv ~ value + capital, data = Grunfeld,
+           effect = "twoways", model = "within")
> 
> # vcovHC
> print(attr(vcovHC(gi), which="cluster"))                     # group - default
[1] "group"
> print(attr(vcovHC(gi, cluster="group"), which="cluster"))    # group
[1] "group"
> print(attr(vcovHC(gi, cluster="time"), which="cluster"))     # time
[1] "time"
> 
> # vcovBK
> print(attr(vcovBK(gi), which="cluster"))                    # group - default
[1] "group"
> print(attr(vcovBK(gi, cluster="group"), which="cluster"))   # group
[1] "group"
> print(attr(vcovBK(gi, cluster="time"), which="cluster"))    # time
[1] "time"
> 
> # vcovSCC
> print(attr(vcovSCC(gi), which="cluster"))                    # time - default and should be the only option for SCC
[1] "time"
> print(attr(vcovSCC(gi, cluster="group"), which="cluster"))   # group
[1] "group"
> print(attr(vcovSCC(gi, cluster="time"), which="cluster"))    # time
[1] "time"
> 
> # vcovNW
> print(attr(vcovNW(gi), which="cluster"))                    # time - default and should be the only option for NW
[1] "time"
> print(attr(vcovNW(gi, cluster="group"), which="cluster"))   # group
[1] "group"
> print(attr(vcovNW(gi, cluster="time"), which="cluster"))    # time
[1] "time"
> 
> # vcovDC
> print(attr(vcovDC(gi), which="cluster"))                    # group-time - nothing else possible
[1] "group-time"
> 
> 
> # pooling model F test - robust - function
> plm::pwaldtest(gp, test = "F", vcov = vcovHC)

	F test (robust), vcov: vcovHC

data:  inv ~ value + capital
F = 57.9049, df1 = 2, df2 = 9, p-value = 0.0000072606

> plm::pwaldtest(gp, test = "F", vcov = vcovBK)

	F test (robust), vcov: vcovBK

data:  inv ~ value + capital
F = 32.9422, df1 = 2, df2 = 9, p-value = 0.000072332

> plm::pwaldtest(gp, test = "F", vcov = vcovSCC)

	F test (robust), vcov: vcovSCC

data:  inv ~ value + capital
F = 105.718, df1 = 2, df2 = 19, p-value = 0.000000000050573

> plm::pwaldtest(gp, test = "F", vcov = vcovNW)

	F test (robust), vcov: vcovNW

data:  inv ~ value + capital
F = 92.1225, df1 = 2, df2 = 19, p-value = 0.00000000016671

> plm::pwaldtest(gp, test = "F", vcov = vcovDC) # no finite-sample adj. for df2 done, because not yet clear how to handle "group-time" clustering

	F test (robust), vcov: vcovDC

data:  inv ~ value + capital
F = 65.0889, df1 = 2, df2 = 197, p-value < 0.000000000000000222

> 
> # within model individual F test - robust - function
> plm::pwaldtest(gi, test = "F", vcov = vcovHC)

	F test (robust), vcov: vcovHC

data:  inv ~ value + capital
F = 31.7744, df1 = 2, df2 = 9, p-value = 0.000083417

> plm::pwaldtest(gi, test = "F", vcov = vcovBK)

	F test (robust), vcov: vcovBK

data:  inv ~ value + capital
F = 64.3086, df1 = 2, df2 = 9, p-value = 0.000004678

> plm::pwaldtest(gi, test = "F", vcov = vcovSCC)

	F test (robust), vcov: vcovSCC

data:  inv ~ value + capital
F = 75.9419, df1 = 2, df2 = 19, p-value = 0.00000000086597

> plm::pwaldtest(gi, test = "F", vcov = vcovNW)

	F test (robust), vcov: vcovNW

data:  inv ~ value + capital
F = 29.0557, df1 = 2, df2 = 19, p-value = 0.0000016616

> plm::pwaldtest(gi, test = "F", vcov = vcovDC) # no finite-sample adj. for df2 done, because not yet clear how to handle "group-time" clustering

	F test (robust), vcov: vcovDC

data:  inv ~ value + capital
F = 55.4686, df1 = 2, df2 = 188, p-value < 0.000000000000000222

> 
> # within model time F test - robust - function
> plm::pwaldtest(gt, test = "F", vcov = vcovHC)

	F test (robust), vcov: vcovHC

data:  inv ~ value + capital
F = 62.1078, df1 = 2, df2 = 9, p-value = 0.0000054149

> plm::pwaldtest(gt, test = "F", vcov = vcovBK)

	F test (robust), vcov: vcovBK

data:  inv ~ value + capital
F = 28.7897, df1 = 2, df2 = 9, p-value = 0.00012276

> plm::pwaldtest(gt, test = "F", vcov = vcovSCC)

	F test (robust), vcov: vcovSCC

data:  inv ~ value + capital
F = 89.0247, df1 = 2, df2 = 19, p-value = 0.00000000022372

> plm::pwaldtest(gt, test = "F", vcov = vcovNW)

	F test (robust), vcov: vcovNW

data:  inv ~ value + capital
F = 103.116, df1 = 2, df2 = 19, p-value = 0.000000000062831

> plm::pwaldtest(gt, test = "F", vcov = vcovDC) # no finite-sample adj. for df2 done, because not yet clear how to handle "group-time" clustering

	F test (robust), vcov: vcovDC

data:  inv ~ value + capital
F = 64.2897, df1 = 2, df2 = 178, p-value < 0.000000000000000222

> 
> # within model twoways F test - robust - function
> plm::pwaldtest(gd, test = "F", vcov = vcovHC)

	F test (robust), vcov: vcovHC

data:  inv ~ value + capital
F = 74.6338, df1 = 2, df2 = 9, p-value = 0.0000024936

> plm::pwaldtest(gd, test = "F", vcov = vcovBK)

	F test (robust), vcov: vcovBK

data:  inv ~ value + capital
F = 58.0144, df1 = 2, df2 = 9, p-value = 0.0000072035

> plm::pwaldtest(gd, test = "F", vcov = vcovSCC)

	F test (robust), vcov: vcovSCC

data:  inv ~ value + capital
F = 46.9641, df1 = 2, df2 = 19, p-value = 0.000000044313

> plm::pwaldtest(gd, test = "F", vcov = vcovNW)

	F test (robust), vcov: vcovNW

data:  inv ~ value + capital
F = 33.8818, df1 = 2, df2 = 19, p-value = 0.00000054194

> plm::pwaldtest(gd, test = "F", vcov = vcovDC) # no finite-sample adj. for df2 done, because not yet clear how to handle "group-time" clustering

	F test (robust), vcov: vcovDC

data:  inv ~ value + capital
F = 104.851, df1 = 2, df2 = 169, p-value < 0.000000000000000222

> 
> # pooling model Chisq - robust - function
> plm::pwaldtest(gp, test = "Chisq", vcov = vcovHC)

	Wald test (robust), vcov: vcovHC

data:  inv ~ value + capital
Chisq = 115.81, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gp, test = "Chisq", vcov = vcovBK)

	Wald test (robust), vcov: vcovBK

data:  inv ~ value + capital
Chisq = 65.8844, df = 2, p-value = 0.0000000000000049361

> plm::pwaldtest(gp, test = "Chisq", vcov = vcovSCC)

	Wald test (robust), vcov: vcovSCC

data:  inv ~ value + capital
Chisq = 211.437, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gp, test = "Chisq", vcov = vcovNW)

	Wald test (robust), vcov: vcovNW

data:  inv ~ value + capital
Chisq = 184.245, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gp, test = "Chisq", vcov = vcovDC) # finite-sample adj. for df2 irrelevant b/c Chisq test

	Wald test (robust), vcov: vcovDC

data:  inv ~ value + capital
Chisq = 130.178, df = 2, p-value < 0.000000000000000222

> 
> # within model individual Chisq - robust - function
> plm::pwaldtest(gi, test = "Chisq", vcov = vcovHC)

	Wald test (robust), vcov: vcovHC

data:  inv ~ value + capital
Chisq = 63.5489, df = 2, p-value = 0.000000000000015869

> plm::pwaldtest(gi, test = "Chisq", vcov = vcovBK)

	Wald test (robust), vcov: vcovBK

data:  inv ~ value + capital
Chisq = 128.617, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gi, test = "Chisq", vcov = vcovSCC)

	Wald test (robust), vcov: vcovSCC

data:  inv ~ value + capital
Chisq = 151.884, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gi, test = "Chisq", vcov = vcovNW)

	Wald test (robust), vcov: vcovNW

data:  inv ~ value + capital
Chisq = 58.1114, df = 2, p-value = 0.00000000000024058

> plm::pwaldtest(gi, test = "Chisq", vcov = vcovDC) # finite-sample adj. for df2 irrelevant b/c Chisq test

	Wald test (robust), vcov: vcovDC

data:  inv ~ value + capital
Chisq = 110.937, df = 2, p-value < 0.000000000000000222

> 
> # within model time Chisq - robust - function
> plm::pwaldtest(gt, test = "Chisq", vcov = vcovHC)

	Wald test (robust), vcov: vcovHC

data:  inv ~ value + capital
Chisq = 124.216, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gt, test = "Chisq", vcov = vcovBK)

	Wald test (robust), vcov: vcovBK

data:  inv ~ value + capital
Chisq = 57.5795, df = 2, p-value = 0.00000000000031389

> plm::pwaldtest(gt, test = "Chisq", vcov = vcovSCC)

	Wald test (robust), vcov: vcovSCC

data:  inv ~ value + capital
Chisq = 178.049, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gt, test = "Chisq", vcov = vcovNW)

	Wald test (robust), vcov: vcovNW

data:  inv ~ value + capital
Chisq = 206.232, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gt, test = "Chisq", vcov = vcovDC) # finite-sample adj. for df2 irrelevant b/c Chisq test

	Wald test (robust), vcov: vcovDC

data:  inv ~ value + capital
Chisq = 128.579, df = 2, p-value < 0.000000000000000222

> 
> # within model twoways Chisq - robust - function
> plm::pwaldtest(gd, test = "Chisq", vcov = vcovHC)

	Wald test (robust), vcov: vcovHC

data:  inv ~ value + capital
Chisq = 149.268, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gd, test = "Chisq", vcov = vcovBK)

	Wald test (robust), vcov: vcovBK

data:  inv ~ value + capital
Chisq = 116.029, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gd, test = "Chisq", vcov = vcovSCC)

	Wald test (robust), vcov: vcovSCC

data:  inv ~ value + capital
Chisq = 93.9283, df = 2, p-value < 0.000000000000000222

> plm::pwaldtest(gd, test = "Chisq", vcov = vcovNW)

	Wald test (robust), vcov: vcovNW

data:  inv ~ value + capital
Chisq = 67.7637, df = 2, p-value = 0.0000000000000019289

> plm::pwaldtest(gd, test = "Chisq", vcov = vcovDC) # finite-sample adj. for df2 irrelevant b/c Chisq test

	Wald test (robust), vcov: vcovDC

data:  inv ~ value + capital
Chisq = 209.701, df = 2, p-value < 0.000000000000000222

> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  1.345   0.056   1.392 
